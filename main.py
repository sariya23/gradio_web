import gradio as gr

from pages.rubric_page import rubric_page
from pages.bankrupt_page import bankrupt_page
from pages.pca import pca_page

with gr.Blocks() as demo:
    gr.Markdown("# üìö ML —à—Ç—É—á–∫–∏")

    with gr.Tabs():
        with gr.Tab("üè† –ì–ª–∞–≤–Ω–∞—è"):
            gr.Markdown("## –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–≠—Ç–æ MK —à—Ç—É—á–∫–∏:\n- PCA –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è\n- –†—É–±—Ä–∏–∫–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞\n - –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±–∞–Ω–∫—Ä–æ—Å—Ç–≤–∞")

        with gr.Tab("üß† –†—É–±—Ä–∏–∫–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞"):
            gr.Markdown("### –ó–∞–≥—Ä—É–∑–∏—Ç–µ `.txt` —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º —Å—Ç–∞—Ç—å–∏:")
            txt_file = gr.File(label="–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", file_types=[".txt"])
            txt_btn = gr.Button("üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Ä—É–±—Ä–∏–∫—É")
            txt_output = gr.Markdown()
            txt_btn.click(
                fn=rubric_page, inputs=txt_file, outputs=txt_output
            )
        with gr.Tab("üè¶ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞"):
            gr.Markdown("### –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞:")
            bankrupt_input = gr.File(label="CSV —Ñ–∞–π–ª", file_types=[".csv"])
            bankrupt_btn = gr.Button("üîç –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å")
            bankrupt_output = gr.Dataframe()

            bankrupt_btn.click(
                fn=bankrupt_page,
                inputs=bankrupt_input,
                outputs=[bankrupt_output],
            )
        with gr.Tab("üî¨ PCA –∞–Ω–∞–ª–∏–∑"):
            gr.Markdown("### –ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª –¥–ª—è PCA –∞–Ω–∞–ª–∏–∑–∞")
            pca_input = gr.File(label="CSV —Ñ–∞–π–ª", file_types=[".csv"])
            pca_button = gr.Button("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫")
            pca_output = gr.Plot()

            pca_button.click(fn=pca_page, inputs=pca_input, outputs=pca_output)


if __name__ == "__main__":
    demo.launch()